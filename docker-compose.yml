version: '3.8'

services:
  # Frontend - Next.js
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=http://backend:8080/api/v1
      - HOSTNAME=0.0.0.0
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - vibe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Backend - Spring Boot
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/codeplayground
      - SPRING_DATASOURCE_USERNAME=codeplayground
      - SPRING_DATASOURCE_PASSWORD=codeplayground123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - JAVA_OPTS=-Xms512m -Xmx1024m -XX:+UseG1GC
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - vibe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: code-playground-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=codeplayground
      - POSTGRES_USER=codeplayground
      - POSTGRES_PASSWORD=codeplayground123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vibe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codeplayground -d codeplayground"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  vibe-network:
    driver: bridge